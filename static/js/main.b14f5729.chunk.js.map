{"version":3,"sources":["api/api.ts","bll/app-reducer.ts","bll/profile-reducer.ts","utils/localStorageHelpers.ts","bll/auth-reducer.ts","components/Header/materialUIstyles.ts","components/ErrorSnackbar/ErrorSnackbar.tsx","components/Header/Header.tsx","features/Login/materialUIstyles.ts","features/Login/Login.tsx","features/Profile/materialUIstyles.ts","assets/images/image.png","features/Profile/Profile.tsx","components/Error404/Error404.tsx","components/Routes/Routes.tsx","components/Preloader/materialUIstyles.ts","components/Preloader/Preloader.tsx","app/App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/Error404/Error404.module.css","app/App.module.css"],"names":["url","initialState","status","error","setAppStatusAC","type","showAppErrorAC","userName","userEmail","getTokenFromLocalStorageTC","dispatch","accessToken","localStorage","getItem","token","JSON","parse","setAccessTokenAC","isLoggedIn","setIsLoggedInAC","loginTC","email","password","fetch","method","headers","body","stringify","clientId","then","response","ok","json","text","Error","data","catch","err","message","login","setItem","authMeTC","logoutTC","res","removeItem","getState","auth","authMe","name","setUserDataAC","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ErrorSnackbar","React","memo","useSelector","state","app","useDispatch","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","Alert","props","elevation","variant","Header","classes","className","AppBar","position","Toolbar","Typography","Button","color","onClick","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","formik","useFormik","initialValues","onSubmit","values","resetForm","validate","errors","test","length","to","PATH","PROFILE","Container","component","maxWidth","CssBaseline","Avatar","noValidate","handleSubmit","TextField","required","fullWidth","id","label","autoComplete","autoFocus","getFieldProps","touched","style","Box","mt","Copyright","align","Link","href","Date","getFullYear","minWidth","background","boxShadow","fontSize","fontWeight","media","height","Profile","profile","styles","Card","CardMedia","image","icon","LOGIN","Error404","errorCat","item","ERROR","Routes","exact","path","render","from","marginLeft","justifyContent","Preloader","CircularProgress","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b14f5729.chunk.js","sourcesContent":["export const url = \"https://tager.dev.ozitag.com/\"\r\n\r\ntype LoginResponseType = {\r\n    tokenType: string\r\n    expiresAt: string\r\n    accessToken: string\r\n    refreshToken: string\r\n    scopes: Array<any>\r\n}\r\n\r\ntype AuthResponseType = {\r\n    name: string\r\n    email: string\r\n}\r\n\r\nexport function login(email: string, password: string) {\r\n    return fetch(url + \"api/auth/user\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({clientId: 1, email, password})\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                return response.text()\r\n                    .then(text => {\r\n                        throw new Error(text)\r\n                    })\r\n            } else {\r\n                return response.json()\r\n            }\r\n        })\r\n        .then(data => {\r\n            return data.data as LoginResponseType\r\n        })\r\n        .catch(error => {\r\n            let err = JSON.parse(error.message)\r\n            throw new Error(err.message)\r\n        })\r\n}\r\n\r\nexport function logout() {\r\n    return fetch(\"https://secret-ocean-49799.herokuapp.com/\" + url + \"user/profile/logout\", { //for cors\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({})\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                return response.text()\r\n                    .then(text => {\r\n                        throw new Error(text)\r\n                    })\r\n            } else {\r\n                let res = JSON.stringify(response)\r\n                return JSON.parse(res)\r\n            }\r\n        })\r\n        .then(data => {\r\n            return data.data\r\n        })\r\n        .catch(error => {\r\n            let err = JSON.parse(error.message)\r\n            return err.message\r\n        })\r\n}\r\n\r\nexport function authMe(token: string | null) {\r\n    return fetch(url + \"api/tager/user/profile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                return response.text()\r\n                    .then(text => {\r\n                        throw new Error(text)\r\n                    })\r\n            } else {\r\n                return response.json()\r\n            }\r\n        })\r\n        .then(data => {\r\n            return data.data as AuthResponseType\r\n        })\r\n        .catch(error => {\r\n            let err = JSON.parse(error.message)\r\n            return err.message\r\n        })\r\n}\r\n\r\n","export type AppReducerActionsType = ReturnType<typeof setAppStatusAC> | ReturnType<typeof showAppErrorAC>\r\nexport type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: \"idle\" as AppStatusType,\r\n    error: null as string | null\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP-REDUCER/SET-APP-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"APP-REDUCER/SHOW-APP-ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const setAppStatusAC = (status: AppStatusType) =>\r\n    ({type: \"APP-REDUCER/SET-APP-STATUS\", status} as const)\r\nexport const showAppErrorAC = (error: string | null) =>\r\n    ({type: \"APP-REDUCER/SHOW-APP-ERROR\", error} as const)","export type ProfileReducerActionsType = ReturnType<typeof setUserDataAC>\r\n\r\nconst initialState = {\r\n    userName: null as string | null,\r\n    userEmail: null as string | null\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PROFILE-REDUCER/SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                userName: action.name,\r\n                userEmail: action.email\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const setUserDataAC = (name: string, email: string) =>\r\n    ({type: \"PROFILE-REDUCER/SET-USER-DATA\", name, email} as const)\r\n","import {Dispatch} from \"redux\";\r\nimport {setAccessTokenAC} from \"../bll/auth-reducer\";\r\n\r\nexport const setTokenToLocalStorageTC = (token: string) => (dispatch: Dispatch) => {\r\n    if (token) localStorage.setItem(\"access_token\", JSON.stringify(token))\r\n}\r\n\r\nexport const getTokenFromLocalStorageTC = () => (dispatch: Dispatch) => {\r\n    let accessToken = localStorage.getItem(\"access_token\")\r\n    if (accessToken) {\r\n        let token = JSON.parse(accessToken)\r\n        dispatch(setAccessTokenAC(token))\r\n    }\r\n}\r\n\r\nexport const removeTokenFromLocalStorageTC = () => (dispatch: Dispatch) => {\r\n    localStorage.removeItem(\"access_token\")\r\n}\r\n\r\n","import {authMe, login, logout} from \"../api/api\";\r\nimport {setAppStatusAC, showAppErrorAC} from \"./app-reducer\";\r\nimport {setUserDataAC} from \"./profile-reducer\";\r\nimport {AppRootStateType, AppThunkType} from \"./store\";\r\nimport {\r\n    getTokenFromLocalStorageTC,\r\n    removeTokenFromLocalStorageTC,\r\n    setTokenToLocalStorageTC\r\n} from \"../utils/localStorageHelpers\";\r\n\r\nexport type AuthReducerActionsType = ReturnType<typeof setAccessTokenAC> | ReturnType<typeof setIsLoggedInAC>\r\n\r\nconst initialState = {\r\n    token: null as string | null,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"AUTH-REDUCER/SET-ACCESS-TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case \"AUTH-REDUCER/SET-IS-LOGGED-IN\":\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const setAccessTokenAC = (token: string) =>\r\n    ({type: \"AUTH-REDUCER/SET-ACCESS-TOKEN\", token} as const)\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: \"AUTH-REDUCER/SET-IS-LOGGED-IN\", isLoggedIn: isLoggedIn} as const)\r\n\r\n//thunk creators\r\nexport const loginTC = (email: string, password: string): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    login(email, password)\r\n        .then(response => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsLoggedInAC(true))\r\n            const {accessToken} = response\r\n            dispatch(setTokenToLocalStorageTC(accessToken))\r\n            dispatch(authMeTC())\r\n        })\r\n        .catch(error => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(showAppErrorAC(error.message))\r\n        })\r\n}\r\n\r\nexport const logoutTC = (): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    logout()\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(removeTokenFromLocalStorageTC())\r\n        })\r\n        .catch(error => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(showAppErrorAC(error.message))\r\n        })\r\n}\r\n\r\nexport const authMeTC = (): AppThunkType => (dispatch, getState: () => AppRootStateType) => {\r\n    dispatch(getTokenFromLocalStorageTC())\r\n    let token = getState().auth.token\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authMe(token)\r\n        .then(response => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsLoggedInAC(true))\r\n            const {name, email} = response\r\n            dispatch(setUserDataAC(name, email))\r\n        })\r\n        .catch(error => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(showAppErrorAC(error.message))\r\n        })\r\n}","import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        }\r\n    })\r\n)\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {showAppErrorAC} from \"../../bll/app-reducer\";\r\n\r\n\r\nexport const ErrorSnackbar: React.FC = React.memo(() => {\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(showAppErrorAC(null))\r\n    }\r\n\r\n    const isOpen = error !== null\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n})\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useStyles} from \"./materialUIstyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {logoutTC} from \"../../bll/auth-reducer\";\r\nimport {ErrorSnackbar} from \"../ErrorSnackbar/ErrorSnackbar\";\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <ErrorSnackbar/>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        User Authorization\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={logout}>{isLoggedIn ? \"Sign out\" : \"\"}</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n})","import {makeStyles} from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}))","import React from 'react';\r\nimport {Avatar, Box, Button, Container, CssBaseline, Link, TextField, Typography} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useStyles} from \"./materialUIstyles\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {loginTC} from \"../../bll/auth-reducer\";\r\nimport {PATH} from \"../../components/Routes/Routes\";\r\n\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport const Login: React.FC = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'user@ozitag.com',\r\n            password: 'user',\r\n        },\r\n        onSubmit: values => {\r\n            const {email, password} = values\r\n            dispatch(loginTC(email, password))\r\n            formik.resetForm()\r\n        },\r\n        validate: (values => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Must be 4 characters or more'\r\n            }\r\n            return errors\r\n        })\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ?\r\n                        <div style={{color: 'red'}}>{formik.errors.email}</div> : ''}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"off\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password ?\r\n                        <div style={{color: 'red'}}>{formik.errors.password}</div> : ''}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/andrew9488\">\r\n                Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    )\r\n}\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            minWidth: 260,\r\n            maxWidth: 340,\r\n            width: \"100%\",\r\n            margin: \"20px auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            background: \"#8080801f\",\r\n            \"&:hover\": {\r\n                boxShadow: \"4px 4px 12px rgba(0, 0, 0, 0.4)\"\r\n            }\r\n        },\r\n        title: {\r\n            margin: \"10px 3px 5px 3px\",\r\n            fontSize: 24,\r\n            fontWeight: 700,\r\n        },\r\n        media: {\r\n            height: 306,\r\n            width: \"90%\",\r\n            marginTop: 10,\r\n        }\r\n    })\r\n)","export default __webpack_public_path__ + \"static/media/image.60803bf7.png\";","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../components/Routes/Routes\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useStyles} from \"./materialUIstyles\";\r\nimport icon from \"../../assets/images/image.png\"\r\n\r\nexport const Profile: React.FC = React.memo(() => {\r\n\r\n    const name = useSelector<AppRootStateType, string | null>(state => state.profile.userName)\r\n    const email = useSelector<AppRootStateType, string | null>(state => state.profile.userEmail)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const styles = useStyles()\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <Card className={styles.root}>\r\n            <CardMedia\r\n                className={styles.media}\r\n                image={icon}\r\n            />\r\n            <Typography variant=\"h5\" component=\"h1\" className={styles.title}>\r\n                Name: {name}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h1\" className={styles.title}>\r\n                Email: {email}\r\n            </Typography>\r\n        </Card>\r\n    )\r\n})","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../Routes/Routes\";\r\nimport style from \"./Error404.module.css\"\r\n\r\n\r\nexport const Error404: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <div className={style.error}>\r\n            <div>ERROR 404</div>\r\n            <div>The cat couldn't find a page!</div>\r\n            <div className={style.errorCat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            <nav>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.PROFILE}>go home</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../../features/Login/Login\";\r\nimport {Profile} from \"../../features/Profile/Profile\";\r\nimport {Error404} from \"../Error404/Error404\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/\",\r\n    PROFILE: \"/profile\",\r\n    ERROR: \"/404\"\r\n}\r\n\r\n\r\nexport const Routes: React.FC = React.memo(() => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n            <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={PATH.ERROR} render={() => <Error404/>}/>\r\n            <Redirect from={\"*\"} to={PATH.ERROR}/>\r\n        </Switch>\r\n    )\r\n})","import {Theme} from \"@material-ui/core/styles\";\r\nimport {createStyles} from \"@material-ui/core/styles\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            '& > * + *': {\r\n                marginLeft: theme.spacing(5)\r\n            },\r\n            justifyContent: \"center\",\r\n            marginTop: 50\r\n        }\r\n    })\r\n)","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React from \"react\";\r\nimport {useStyles} from \"./materialUIstyles\";\r\n\r\nexport const Preloader: React.FC = React.memo(() => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress style={{width: \"100px\", height: \"100px\"}}/>\r\n        </div>\r\n    )\r\n})","import React, {useEffect} from 'react';\nimport styles from './App.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authMeTC} from \"../bll/auth-reducer\";\nimport {Header} from \"../components/Header/Header\";\nimport {Routes} from '../components/Routes/Routes';\nimport {AppRootStateType} from \"../bll/store\";\nimport {AppStatusType} from \"../bll/app-reducer\";\nimport {Preloader} from \"../components/Preloader/Preloader\";\nimport {getTokenFromLocalStorageTC} from \"../utils/localStorageHelpers\";\n\nexport const App: React.FC = React.memo(() => {\n\n        const status = useSelector<AppRootStateType, AppStatusType>(state => state.app.status)\n        const token = useSelector<AppRootStateType, string | null>(state => state.auth.token)\n        const dispatch = useDispatch()\n\n        useEffect(() => {\n            dispatch(getTokenFromLocalStorageTC())\n            if (token) {\n                dispatch(authMeTC())\n            }\n        }, [token])\n\n        return (\n            <div className={styles.app}>\n                <Header/>\n                {status === \"loading\" ? <Preloader/> : <Routes/>}\n            </div>\n        )\n    }\n)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {appReducer, AppReducerActionsType} from \"./app-reducer\";\r\nimport {authReducer, AuthReducerActionsType} from \"./auth-reducer\";\r\nimport {profileReducer, ProfileReducerActionsType} from \"./profile-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\ntype ActionsType = AppReducerActionsType | ProfileReducerActionsType | AuthReducerActionsType\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport type AppThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2PP7y\",\"errorCat\":\"Error404_errorCat__150L-\",\"item\":\"Error404_item__2g6PZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__LTH40\"};"],"sourceRoot":""}